spring.application.name=auth-service
server.port=8084
server.servlet.context-path=/api/auth
spring.profiles.active=${SPRING_PROFILE_ACTIVE:dev}

rsa.private-key=file:/Users/apple/Documents/Projects/E-COM/src/main/resources/certs/private.pem
rsa.public-key=file:/Users/apple/Documents/Projects/E-COM/src/main/resources/certs/public.pem

spring.datasource.url=jdbc:postgresql://${DATASOURCE_HOST:localhost}:${DATASOURCE_PORT:5432}/auth_service
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD:2255}

eureka.client.serviceUrl.defaultzone=http://localhost:8761/eureka

#---
spring.config.activate.on-profile=dev
spring.jpa.hibernate.ddl-auto = create-drop

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web = DEBUG


#Circuit Breaker
resilience4j.circuitbreaker.instances.authentication.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.authentication.register-health-indicator=true

#Resilience4J TimeOut Props
resilience4j.timelimiter.instances.authentication.timeout-duration=5s

#Resilience4j Retry Props
resilience4j.retry.instances.authentication.max-attempts=3
resilience4j.retry.instances.authentication.wait-duration=3s


#Kafka Properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notification
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=notificationEvent:com.service.auth.events.NotificationEvent